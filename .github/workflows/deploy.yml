name: Deploy to Vercel

on:
  push:
    branches:
      - main  # Deploy only on pushes to main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Cache Node.js modules
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          npm install
          npm install @supabase/supabase-js
          npm install @react-three/fiber three --save
          npm install @types/three eslint-config-next --save-dev
          npm install pino --save # Logging library
          npm install react-modal react-lazyload # Additional libraries
          npm install framer-motion react-circular-progressbar # UI enhancements

      # Step 4: Validate Project Structure
      - name: Validate Project Structure
        run: |
          echo "Validating project directory structure..."
          ls -R components
          ls -R utils
          ls -R lib

      # Step 5: Debug Missing Components
      - name: Debug Missing Components
        run: |
          echo "Listing components/UI directory"
          ls -R components/UI || echo "components/UI not found!"
          echo "Listing components/Starfield directory"
          ls -R components/Starfield || echo "components/Starfield not found!"

      # Step 6: Validate StarfieldCanvas Export
      - name: Validate StarfieldCanvas Export
        run: |
          node -e "
          const StarfieldCanvas = require('./components/Starfield/Starfield').default;
          console.log('StarfieldCanvas export is valid:', !!StarfieldCanvas);
          " || echo "StarfieldCanvas export validation failed!"

      # Step 7: Sync and Validate Modal Component
      - name: Sync and Validate Modal Component
        run: |
          echo "Checking Modal component in components/UI"
          ls -R components/UI || echo "components/UI/Modal.tsx not found!"
          node -e "
          const { Modal } = require('./components/UI/Modal');
          console.log('Modal component export is valid:', !!Modal);
          " || echo "Modal component export validation failed!"

      # Step 8: Add utility functions
      - name: Add Utility Functions
        run: |
          mkdir -p utils
          echo > utils/detectPerformance.ts <<- EOL
          export function detectLowPerformance() {
            const ua = navigator.userAgent;
            const isLowPerformance =
              /Android|iPhone|iPad|iPod|Windows Phone/i.test(ua) ||
              navigator.hardwareConcurrency < 4;
            return isLowPerformance;
          }
          EOL

          echo > utils/logger.ts <<- EOL
          import pino from 'pino';

          export const logger = pino({
            level: process.env.NODE_ENV === 'production' ? 'info' : 'debug',
            transport: process.env.NODE_ENV !== 'production'
              ? {
                  target: 'pino-pretty',
                  options: { colorize: true },
                }
              : undefined,
          });
          EOL

          echo > utils/validateEnv.ts <<- EOL
          export function validateEnv() {
            const requiredEnvVars = ['SUPABASE_URL', 'SUPABASE_KEY'];
            requiredEnvVars.forEach((env) => {
              if (!process.env[env]) {
                console.error(\`Missing environment variable: \${env}\`);
                throw new Error(\`Environment variable \${env} is not set.\`);
              }
            });
          }
          EOL

      # Step 9: Lint the code
      - name: Lint the code
        run: npm run lint

      # Step 10: Build the application
      - name: Build the application
        env:
          CI: false # Disables certain Next.js optimizations not compatible with CI
        run: npm run build

      # Step 11: Deploy to Vercel
      - name: Deploy to Vercel
        run: npx vercel --prod --yes --name="personal-digital-shop" --token=$VERCEL_TOKEN
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}