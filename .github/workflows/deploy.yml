name: Deploy to Vercel

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Cache Node.js modules
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies, including missing ones
      - name: Install dependencies
        run: |
          npm install
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_KEY }}

      # Validate Environment Variables
      - name: Validate environment variables
        run: |
          if [ -z "${NEXT_PUBLIC_SUPABASE_URL}" ] || [ -z "${NEXT_PUBLIC_SUPABASE_ANON_KEY}" ]; then
            echo "Environment variables are missing!"
            exit 1
          fi
          echo "All required environment variables are set."
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_KEY }}

      # Lint and Check Types
      - name: Lint and Check Types
        run: |
          npm run lint
          npm run type-check
        env:
          CI: true

      # Increase Max Listeners
      - name: Increase Max Listeners
        run: |
          export NODE_OPTIONS="--max-old-space-size=4096 --trace-warnings"

      # Build the application
      - name: Build the application
        env:
          CI: false
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_KEY }}
        run: npm run build

      # Collect Build Logs if Failed
      - name: Collect Build Logs
        if: failure()
        run: |
          echo "=== Build Failed Logs ==="
          npx vercel logs codewithwill-6ceh6mc4l-codewithwill.vercel.app --token=$VERCEL_TOKEN || echo "No logs found"

      # Deploy to Vercel
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_KEY }}
        run: |
          echo "Deploying to Vercel..."
          npx vercel --prod --yes --token=$VERCEL_TOKEN