name: Deploy to Vercel

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Cache Node.js modules
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies
      - name: Install dependencies
        run: |
          npm install
          npm install @supabase/supabase-js
          npm install react-chartjs-2 chart.js
          npm install --save-dev @types/chart.js
          npm install @react-three/fiber three --save
          npm install @types/three eslint-config-next --save-dev
          npm install pino --save
          npm install react-modal react-lazyload
          npm install framer-motion react-circular-progressbar

      # Validate directory structure
      - name: Validate Project Structure
        run: |
          echo "Listing all components..."
          ls -R components || echo "components directory is missing!"
          ls -R components/UI || echo "components/UI directory is missing!"

      # Locate Modal references
      - name: Locate Modal References
        run: |
          echo "Searching for Modal references..."
          grep -r "Modal" components || echo "No references to Modal found."

      # Validate Modal component export
      - name: Validate Modal Component
        run: |
          node -e "
          try {
            const { Modal } = require('./components/UI/Modal');
            console.log('Modal component export is valid:', !!Modal);
          } catch (e) {
            console.error('Error importing Modal component:', e.message);
          }
          " || echo "Modal import validation failed!"

      # Build the application
      - name: Build the application
        env:
          CI: false
        run: npm run build

      # Deploy to Vercel
      - name: Deploy to Vercel
        run: npx vercel --prod --yes --name="personal-digital-shop" --token=$VERCEL_TOKEN
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
