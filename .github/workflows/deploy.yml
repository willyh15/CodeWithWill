name: Deploy to Vercel

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Cache Node.js modules
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies
      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm install || echo "Retrying npm install..."
          if ! npm list next >/dev/null 2>&1; then
            echo "Next.js missing, installing manually..."
            npm install next || exit 1
          fi
          if ! npm list eslint >/dev/null 2>&1; then
            echo "ESLint missing, installing manually..."
            npm install --save-dev eslint
          fi
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_KEY }}

      # Validate Environment Variables
      - name: Validate environment variables
        run: |
          if [ -z "${NEXT_PUBLIC_SUPABASE_URL}" ] || [ -z "${NEXT_PUBLIC_SUPABASE_ANON_KEY}" ]; then
            echo "Environment variables are missing!"
            exit 1
          fi
          echo "All required environment variables are set."
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_KEY }}

      # Lint and Check Types
      - name: Lint and Check Types
        run: |
          echo "Running lint and type-check..."
          npx eslint . || echo "ESLint errors detected."
          npm run type-check || echo "Type-check errors detected."
        env:
          CI: true

      # Pre-Build Validation
      - name: Ensure Next.js CLI
        run: |
          echo "Checking Next.js CLI availability..."
          if ! npx next --version; then
            echo "Next.js CLI is missing. Please verify the installation."
            exit 1
          fi

      # Build the application
      - name: Build the application
        env:
          CI: false
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_KEY }}
        run: npm run build

      # Collect Build Logs if Failed
      - name: Collect Build Logs
        if: failure()
        run: |
          echo "=== Build Failed Logs ==="
          npx vercel logs codewithwill-6ceh6mc4l-codewithwill.vercel.app --token=$VERCEL_TOKEN || echo "No logs found"

      # Deploy to Vercel
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_KEY }}
        run: |
          echo "Deploying to Vercel..."
          npx vercel --prod --yes --token=$VERCEL_TOKEN